<!DOCTYPE html>
<!--html-->
<html manifest="app.cache">
  <head>
    <title>HTML5 Tutorial Player</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=0.75, maximum-scale=0.75">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/vendor/bootstrap-multiselect/bootstrap-multiselect.css">
    <link rel="stylesheet" href="/styles/bootstrap.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/reveal-importer.css">
    <link rel="stylesheet" href="/styles/reveal/theme/serif.css">
    <!--STYLES END-->


    <!--Added this so the client has access to the csrf tag and it's grabbed first service side on every page -->
    <!--script type="text/javascript">
      window.overlord = { csrf: "<%= _csrf %>" };
    </script-->

    <!-- The sound file tht will play on activity events -->
    <audio id="chatAudio">
      <source src="/sounds/notify.mp3" type="audio/mpeg">
      <source src="/sounds/notify.wav" type="audio/wav">
      <source src="/sounds/notify.ogg" type="audio/ogg">
    </audio>


  </head>

  <body>


    <nav class="navbar navbar-inverse navbar-fixed-top">
      <div class="container">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbarCollapse">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="/">Hochschule Bonn-Rhein-Sieg</a>
        </div>
        <div class="navbar-collapse collapse" id="navbarCollapse">
          <ul class="nav navbar-nav">
            <% if(session.authenticated) { %>
              <% if(session.User.isprof) { %>
                <li class="active"><a href="/prof/show"><%= session.User.email %> </a></li>
              <% } else { %>
                <li class="active"><a href="/student/show"><%= session.User.email %> </a></li>
                <% } %>
            <% } %>
            <% if(session.authenticated && session.User.isadmin) { %>
              <li><a href="/prof/?list">Professoren</a></li>
              <li><a href="/student/?list">Studenten</a></li>
              <li><a href="/vorlesung/?list"> Vorlesungen</a></li>
            <% } %>
            <% if(session.authenticated && session.User.isprof) { %>
              <li><a href="/vorlesung"> Meine Vorlesungen</a></li>
            <% } %>

          </ul>
          <div class="navbar-right">
            <% if (session.authenticated) { %>
              <a class="btn btn-default navbar-btn navbar-right" href="/session/destroy">sign-out</a>
            <% } %>
          </div>
          <% if (!session.authenticated) { %>
            <!--form class="navbar-form navbar-right" action="/session/create">
              <div class="form-group">
                <input type="text" placeholder="Email" name="email" class="form-control"/>
              </div>
              <div class="form-group">
                <input type="password" placeholder="Password" name="password" class="form-control"/>
              </div>
              <button type="submit" class="btn btn-success">Anmelden</button-->
              <!--input type="hidden" name="_csrf" value="<%= _csrf %>"/-->
            <!--/form-->
          <% } %>
        </div>
      </div>
    </nav>

    <div class="main-content">
      <%- body %>
    </div>


    <footer>
    <div class="container">
      <hr>

        <div class="col-sm-4 pull-right">
          <a href="#"> 123</a>
          <div>ABC</div>

        </div>
    </div>
  </footer>


    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    <script type="text/javascript" src="/jst.js"></script>
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/vendor/jquery/jquery.js"></script>
    <script src="/vendor/bootstrap/bootstrap.js"></script>
    <script src="/vendor/bootstrap-multiselect/bootstrap-multiselect.js"></script>
    <script src="/vendor/handlebars/handlebars.js"></script>
    <script src="/vendor/jquery.validate/jquery.validate.js"></script>
    <script src="/vendor/sails.io.js/sails.io.js"></script>
    <script src="/js/dependencies/jquery/customValidate.js"></script>
    <script src="/js/dependencies/underscore.js"></script>
    <script src="/js/reveal/reveal.js"></script>
    <script src="/js/reveal/lib/js/head.min.js"></script>
    <script src="/js/app.js"></script>
    <script src="/js/customView.js"></script>
    <script src="/js/impress.js"></script>
    <script src="/js/impressConsole.js"></script>
    <script src="/js/main.js"></script>
    <script src="/js/notizenFragen.js"></script>
    <script src="/js/positioning.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
